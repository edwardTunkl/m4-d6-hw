{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ed\\\\Desktop\\\\Code\\\\StriveSchool\\\\m4-d6-hw-clone\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = asin => {\n  _s();\n\n  // state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false\n  // }\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  componentDidUpdate = async prevProps => {\n    if (prevProps.asin !== this.props.asin) {\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\n          headers: {\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFjZjViYjJkNTI2MjAwMTViNmRjOTMiLCJpYXQiOjE2MjkyODc4NjcsImV4cCI6MTYzMDQ5NzQ2N30.HkhDkrIcH7q04AsuHParGAbLEKxc3bvsAnjh3DGfZIE\"\n          }\n        });\n        console.log(response);\n\n        if (response.ok) {\n          let comments = await response.json();\n          setComments(comments);\n          setIsLoading(false);\n          setIsError(false);\n        } else {\n          console.log('error');\n          setIsLoading(false);\n          setIsError(true);\n        }\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n        setIsError(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"A0ear+qayz1LMFSnh9UhVnTmJEU=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/Ed/Desktop/Code/StriveSchool/m4-d6-hw-clone/src/components/CommentArea.jsx"],"names":["useState","useEffect","CommentList","AddComment","Loading","Error","CommentArea","asin","comments","setComments","isLoading","setIsLoading","isError","setIsError","componentDidUpdate","prevProps","props","setState","response","fetch","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAAA;;AAE1B;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEAc,EAAAA,kBAAkB,GAAG,MAAOC,SAAP,IAAqB;AACtC,QAAIA,SAAS,CAACR,IAAV,KAAmB,KAAKS,KAAL,CAAWT,IAAlC,EAAwC;AACpC,WAAKU,QAAL,CAAc;AACVP,QAAAA,SAAS,EAAE;AADD,OAAd;;AAGA,UAAI;AACA,YAAIQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyDZ,IAA1D,EAAgE;AACtFa,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE;AADV;AAD6E,SAAhE,CAA1B;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,YAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,cAAIhB,QAAQ,GAAG,MAAMU,QAAQ,CAACO,IAAT,EAArB;AACDhB,UAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,UAAU,CAAC,KAAD,CAAV;AACF,SALD,MAKO;AACHS,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAZ,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OAjBD,CAiBE,OAAOa,KAAP,EAAc;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAf,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;AACJ,GA5BD;;AA8BI,sBACI;AAAA,eACKH,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADlB,EAEKE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP,CAjDD;;GAAMF,W;;KAAAA,W;AAkDN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst CommentArea = (asin) => {\r\n\r\n    // state = {\r\n    //     comments: [], // comments will go here\r\n    //     isLoading: false,\r\n    //     isError: false\r\n    // }\r\n    const [comments, setComments] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isError, setIsError] = useState(false)\r\n\r\n    componentDidUpdate = async (prevProps) => {\r\n        if (prevProps.asin !== this.props.asin) {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\r\n                    headers: {\r\n                        Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFjZjViYjJkNTI2MjAwMTViNmRjOTMiLCJpYXQiOjE2MjkyODc4NjcsImV4cCI6MTYzMDQ5NzQ2N30.HkhDkrIcH7q04AsuHParGAbLEKxc3bvsAnjh3DGfZIE\"\r\n                    }\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                   setComments(comments)\r\n                   setIsLoading(false)\r\n                   setIsError(false)\r\n                } else {\r\n                    console.log('error')\r\n                    setIsLoading(false)\r\n                    setIsError(true)\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                setIsLoading(false)\r\n                setIsError(true)\r\n            }\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {isLoading && <Loading />}\r\n                {isError && <Error />}\r\n                <AddComment asin={asin} />\r\n                <CommentList commentsToShow={comments} />\r\n            </div>\r\n        )\r\n}\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}